runLitpScript two-node-std.inc

litp create -t dhcp-service -p /software/services/s1 -o service_name="dhcp_svc1"
litp create -t dhcp-subnet -p /software/services/s1/subnets/s1 -o network_name="storage_1"
litp create -t dhcp-range -p /software/services/s1/subnets/s1/ranges/r1 -o start="10.10.10.1" end="10.10.10.10"

litp create -t dhcp6-service -p /software/services/s2 -o service_name="dhcp_svc2"
litp create -t dhcp6-subnet -p /software/services/s2/subnets/s1 -o network_name="storage_2"
litp create -t dhcp6-range -p /software/services/s2/subnets/s1/ranges/r1 -o start="fe80::a00:27ff:fe65:c8c1" end="fe80::a00:27ff:fe65:c8f4"
  
litp inherit -p /deployments/site1/clusters/cluster1/nodes/node1/services/s1 -s /software/services/s1 -o primary="true"
litp inherit -p /deployments/site1/clusters/cluster1/nodes/node2/services/s1 -s /software/services/s1 -o primary="true"

litp inherit -p /deployments/site1/clusters/cluster1/nodes/node1/services/s2 -s /software/services/s2 -o primary="false"
litp inherit -p /deployments/site1/clusters/cluster1/nodes/node2/services/s2 -s /software/services/s2 -o primary="false"

litp create -t network -p /infrastructure/networking/networks/storage_1 -o subnet='10.10.10.0/24' name='storage_1'

litp create -p /deployments/site1/clusters/cluster1/nodes/node1/network_interfaces/nic_4 -t eth -o device_name=eth4 macaddress=52:54:00:2b:43:82 network_name=storage_1 ipaddress=10.10.10.12
litp create -p /deployments/site1/clusters/cluster1/nodes/node2/network_interfaces/nic_4 -t eth -o device_name=eth4 macaddress=52:54:00:eb:c3:96 network_name=storage_1 ipaddress=10.10.10.11

litp create -p /deployments/site1/clusters/cluster1/nodes/node1/network_interfaces/nic_5 -t eth -o device_name=eth5 macaddress=52:54:00:2b:43:83 network_name=storage_2 ipv6address='fe80::a00:27ff:fe65:c8c5'
litp create -p /deployments/site1/clusters/cluster1/nodes/node2/network_interfaces/nic_5 -t eth -o device_name=eth5 macaddress=52:54:00:eb:c3:97 network_name=storage_2 ipv6address='fe80::a00:27ff:fe65:c8c6'

let __err_1 --err_type ValidationError --err_message 'dhcp-service "dhcp_svc1" must be deployed exactly once as primary and once as non-primary'
let __err_2 --err_type ValidationError --err_message 'dhcp6-service "dhcp_svc2" must be deployed exactly once as primary and once as non-primary'
assertError __err_1 __err_2 create_plan

